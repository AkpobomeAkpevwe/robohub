{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0NAkBeA,EAhBF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OAAS,sBACDC,UAAY,sDADX,UAEL,qBACIC,IAAM,SACVC,IAAG,+BAA6BH,EAAG,IAAhC,mBAJE,IAKF,gCAEH,mCACOF,EADP,OAFG,IAGkB,kCACfC,EADe,OAHlB,OALE,QCgBUK,EAhBN,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZ,OAAS,oCAEDA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAS,cACL,EADK,CAELR,GAAOK,EAAOG,GAAGR,GACjBF,KAASO,EAAOG,GAAGV,KACnBC,MAAUM,EAAOG,GAAGT,OAHPS,MAJpB,QCUFC,EAZG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OAAS,sBAAMV,UAAY,MAAlB,UACL,uBACMA,UAAY,mCAClBW,KAAO,SACPC,YAAc,gBACdC,SAAaH,IALR,QCQEI,EATA,SAACC,GACZ,OAAS,sBACDC,MACA,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAFzD,cAGCJ,EAAMK,SAHP,QCmBEC,E,kDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACJ,yDAEJG,KAAKX,MAAMK,a,GAhBCQ,aC4DZC,G,wDArDX,aAAe,IAAD,8BACV,gBAkBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAlB1C,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJP,E,gEAQO,IAAD,OAChByB,MAAM,8CACDC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKX,SAAS,CAAEvB,OAAQkC,S,+BAQ1B,IAAD,EAC2BZ,KAAKJ,MAA7BlB,EADH,EACGA,OAAQK,EADX,EACWA,YACV8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAGzD,OAAQtC,EAAOwC,OAGT,sBACM5C,UAAY,KADlB,UAEE,oBACGA,UAAY,KADf,2BAFF,KAG4C,cAC1C,EAD0C,CAChCU,aAAiBgB,KAAKI,iBAJlC,IAKK,eACH,EADG,WAEH,eACA,EADA,WAEA,cACA,EADA,CACS1B,OAAWmC,IAHpB,OAFG,OALL,OAFF,uD,GA/BMX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAQ,cAAE,EAAF,IACbC,SAASC,eAAe,SAM5BX,M","file":"static/js/main.cca1cb68.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return ( <\r\n        div className = 'tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5' >\r\n        <\r\n        img alt = 'robots'\r\n        src = { `https://robohash.org/${id+400}?size=200x200` }\r\n        /> <\r\n        div >\r\n        <\r\n        h2 > { name } < /h2> <\r\n        p > { email } < /p> < /\r\n        div > <\r\n        /div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n        return ( < div > {\r\n                //loop\r\n                robots.map((user, i) => {\r\n                    return ( <\r\n                        Card key = { i }\r\n                        id = { robots[i].id }\r\n                        name = { robots[i].name }\r\n                        email = { robots[i].email }\r\n                        / >\r\n                    );\r\n                })\r\n            } < /div >);\r\n        }\r\n\r\n\r\n        export default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return ( < div className = 'pa2' >\r\n        <\r\n        input className = 'pa3 ba b--green bg-lightest-blue'\r\n        type = 'search'\r\n        placeholder = 'search robots'\r\n        onChange = { searchChange }\r\n        / > < /\r\n        div >\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return ( <\r\n        div style = {\r\n            { overflowY: 'scroll', border: '5px solid black', height: '600px' }\r\n        } > { props.children } <\r\n        /div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1 > Oops!That is not good < /h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    //states\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(users => {\r\n                this.setState({ robots: users })\r\n            })\r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        return !robots.length ?\r\n            <\r\n            h1 > Loading din din < /h1> : \r\n            ( <\r\n                div className = 'tc' >\r\n                <\r\n                h1 className = 'f1' > RoboFriends < /h1>  <\r\n                SearchBox searchChange = { this.onSearchChange }\r\n                /> <\r\n                Scroll >\r\n                <\r\n                ErrorBoundry >\r\n                <\r\n                CardList robots = { filteredRobots }\r\n                /> <\r\n                /ErrorBoundry> <\r\n                /\r\n                Scroll > <\r\n                /div >\r\n            );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render( < App / > ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}